<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <context:component-scan base-package="com.shenchao.domain.config"/>
    <!--<mvc:annotation-driven/>-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--<jee:jndi-lookup id="dataSource" jndi-name="jdbc/mysql"/>-->
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
    </bean>
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 使用内存数据库 -->
    <!--<jdbc:embedded-database id="dataSource" type="DERBY">-->
        <!--<jdbc:script location="classpath:schema.sql"/>-->
        <!--<jdbc:script location="classpath:test-data.sql"/>-->
    <!--</jdbc:embedded-database>-->
    <bean class="com.shenchao.domain.config.DependsOnExoticType" id="dependsOnExoticType">
        <property name="type" value="2013-12-23"/>
        <property name="date" value="2012-02-13"/>
    </bean>
    <!--<bean id="conversionService"-->
          <!--class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--<property name="formatters">-->
            <!--<set>-->
                <!--<bean class="com.shenchao.domain.config.MyFormatting"/>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="registerDefaultFormatters" value="false" />
        <property name="formatters">
            <set>
                <bean class="org.springframework.format.number.NumberFormatAnnotationFormatterFactory" />
            </set>
        </property>
        <property name="formatterRegistrars">
            <set>
                <bean class="org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar">
                    <!--<property name="dateFormatter">-->
                        <!--<bean class="org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean">-->
                            <!--<property name="pattern" value="yyyyMMdd"/>-->
                        <!--</bean>-->
                    <!--</property>-->
                </bean>
                <bean class="com.shenchao.domain.config.MyFormatterRegistrar"/>
            </set>
        </property>
    </bean>
    <!--<aop:aspectj-autoproxy/>-->
    <aop:config>
        <aop:pointcut id="myPoint" expression="execution(* com.shenchao..AOPTarget.*(..))"/>
        <aop:aspect ref="AOPTest">
            <aop:after method="After" pointcut-ref="myPoint"/>
        </aop:aspect>
    </aop:config>
    <bean class="com.shenchao.domain.config.PersonImpl" id="myPerson"/>
    <bean class="com.shenchao.domain.config.MyAfter" id="after"/>
    <!--<bean class="org.springframework.aop.framework.ProxyFactoryBean" id="person">-->
        <!--<property name="target" ref="myPerson"/>-->
        <!--<property name="interfaces"><value>com.shenchao.domain.config.Person</value></property>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>after</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash;<property name="proxyTargetClass" value="true"/>&ndash;&gt;-->
    <!--</bean>-->

    <!--<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
        <!--<property name="beanNames" value="myPerson"/>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>after</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
    </bean>
    <bean class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="mappedName" value="say*"/>
        <property name="advice" ref="after"/>
    </bean>
    <bean class="org.springframework.jdbc.core.simple.SimpleJdbcInsert" id="simpleJdbcInsert">
        <constructor-arg name="dataSource" ref="dataSource"/>
        <property name="tableName" value="user"/>
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/bos19</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>
    <!--<jdbc:embedded-database id="dataSource" type="DERBY">-->
        <!--<jdbc:script location="classpath:init.sql" separator=";" encoding="UTF-8"/>-->
        <!--<jdbc:script location="classpath:init_data.sql" separator=";" encoding="UTF-8" />-->
    <!--</jdbc:embedded-database>-->
</beans>